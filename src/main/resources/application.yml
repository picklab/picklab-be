spring:
  profiles:
    active: local
  jpa:
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true
    open-in-view: false
  jackson:
    property-naming-strategy: SNAKE_CASE
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true

app:
  notification:
    cleanup:
      enabled: true # 알림 정리 배치 작업 활성화 여부
      retention-days: 30 # 알림 보관 기간 (일)
      batch-size: 100 # 배치 처리 시 한 번에 처리할 알림 개수
    deadline:
      enabled: true # 활동 마감일 알림 배치 작업 활성화 여부
      schedule: "0 0 9 * * *" # 매일 KST 오전 9시 실행 (Cron 표현식)
      timezone: "Asia/Seoul" # 한국 표준시 (KST)
      advanceDays: [ 1, 3 ] # 알림을 보낼 마감일 전 일수
    popular:
      enabled: true # 인기 공고 알림 배치 작업 활성화 여부
      schedule: "0 0 12 * * *" # 매일 KST 12시 실행 (Cron 표현식)
      timezone: "Asia/Seoul" # 한국 표준시 (KST)
      batch-size: 100 # 배치 처리 시 한 번에 처리할 사용자 수

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: /swagger
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha
  api-docs:
    groups:
      enabled: true

oauth:
  kakao:
    client-id: ${KAKAO_CLIENT_ID}
    redirect-uri: ${KAKAO_REDIRECT_URI}
  naver:
    client-id: ${NAVER_CLIENT_ID}
    client-secret: ${NAVER_CLIENT_SECRET}
    redirect-uri: ${NAVER_REDIRECT_URI}
  google:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    redirect-uri: ${GOOGLE_REDIRECT_URI}
    scope: "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/user.birthday.read"
  github:
    client-id: ${GITHUB_CLIENT_ID}
    client-secret: ${GITHUB_CLIENT_SECRET}
    redirect-uri: ${GITHUB_REDIRECT_URI}
    scope: "read:user user:email"

jwt:
  access:
    secret: ${JWT_ACCESS_SECRET}
    expiration: 3600000 # 1시간
  refresh:
    secret: ${JWT_REFRESH_SECRET}
    expiration: 604800000 # 1주일

---
spring:
  config:
    activate:
      on-profile: local
    import: classpath:config-repo/security.properties
  datasource:
    url: jdbc:mysql://localhost:3310/picklab
    username: root
    password: password
    driver-class-name: com.mysql.cj.jdbc.Driver

---
spring:
  config:
    activate:
      on-profile: prod
    import:
      - classpath:config-repo/db.properties
      - classpath:config-repo/security.properties
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

---
spring:
  config:
    activate:
      on-profile: test
    import: classpath:config-repo/security.properties
  datasource:
    url: jdbc:mysql://localhost:3306/testdb
    username: root
    password: password

jwt:
  access:
    secret: testAccessSecrettestAccessSecret
    expiration: 2000 # 2초
  refresh:
    secret: testRefreshSecrettestRefreshSecret
    expiration: 2000 # 2초