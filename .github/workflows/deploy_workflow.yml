name: PickLab BE Deploy Workflow

on:
  workflow_run:
    workflows:
      - 'PickLab BE Integration Workflow'
    types:
      - completed
    branches:
      - main
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test tags'
permissions:
  contents: read

jobs:
  docker-build-push:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    name: Create Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: build docker
        run: ./gradlew bootBuildImage --imageName=${{ secrets.DOCKER_REPO }}:${{ github.event.workflow_run.head_sha || github.sha }}

      - name: Tag Version
        run: |
          docker tag ${{ secrets.DOCKER_REPO }}:${{ github.event.workflow_run.head_sha || github.sha }} ${{ secrets.DOCKER_REPO }}:latest

      - name: Publish Docker Images
        run: |
          docker push ${{ secrets.DOCKER_REPO }}:latest
          docker push ${{ secrets.DOCKER_REPO }}:${{ github.event.workflow_run.head_sha || github.sha }}

  deploy-to-ncp:
    needs: docker-build-push
    name: Deploy to NCP Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository with submodules for deploy files
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}

      - name: Copy deploy files to NCP server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.NCP_SERVER_IP }}
          username: ${{ secrets.NCP_USERNAME }}
          key: ${{ secrets.NCP_SSH_PRIVATE_KEY }}
          port: ${{ secrets.NCP_SSH_PORT }}
          source: ${{ secrets.DEPLOY_SCRIPT_PATH }}
          target: "."
          strip_components: 4

      - name: Deploy to NCP Server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.NCP_SERVER_IP }}
          username: ${{ secrets.NCP_USERNAME }}
          key: ${{ secrets.NCP_SSH_PRIVATE_KEY }}
          port: ${{ secrets.NCP_SSH_PORT }}
          script: |
            chmod +x ${{ secrets.DEPLOY_FILE }} && \
            bash ${{ secrets.DEPLOY_FILE }} \
              ${{ secrets.APP_NAME }} \
              ${{ secrets.DOCKER_REPO }} \
              ${{ github.event.workflow_run.head_sha || github.sha }}

  notify-deploy-statement:
    name: Discord Notification for Deployment Result
    runs-on: ubuntu-latest
    needs: [ docker-build-push, deploy-to-ncp ]
    if: always()
    steps:
      - name: Notify Discord
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DEPLOY_WEBHOOK_URL }}
          status: ${{ job.status }}
          title: "PickLab BE 배포"
          description: |
            Repository: ${{ github.repository }}
            Commit: ${{ github.event.workflow_run.head_sha || github.sha }}
            ${{ needs.deploy-to-ncp.result == 'success' && '✅ 배포 성공!' || '❌ 배포 실패!' }}