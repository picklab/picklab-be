name: PickLab BE Deploy Workflow

on:
  workflow_run:
    workflows:
      - 'PickLab BE Integration Workflow'
    types:
      - completed
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test tags'
permissions:
  contents: read

jobs:
  docker-build-push-deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Create Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: build docker
        run: ./gradlew bootBuildImage --imageName=${{ secrets.DOCKER_REPO }}:${{ github.event.workflow_run.head_sha }}

      - name: Tag Version
        run: |
          docker tag ${{ secrets.DOCKER_REPO }}:${{ github.event.workflow_run.head_sha }} ${{ secrets.DOCKER_REPO }}:latest

      - name: Publish Docker Images
        run: |
          docker push ${{ secrets.DOCKER_REPO }}:latest
          docker push ${{ secrets.DOCKER_REPO }}:${{ github.event.workflow_run.head_sha }}

      - name: Clone private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO }}
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          path: .configs

      - name: Copy env file and deploy script
        run: |
          cp .configs/${{ secrets.PRIVATE_ENV_FILE }} .env
          cp .configs/${{ secrets.PRIVATE_DEPLOY_FILE }} script.sh

      - name: Google Auth
        id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: ${{ secrets.GCE_SA_KEY }}

      - name: set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v1"
        with:
          project_id: ${{ secrets.GCE_PROJECT_ID }}

      - name: Copy .env and deploy script to GCP VM
        run: |
          gcloud compute scp .env ${{ secrets.GCE_USERNAME }}@${{ secrets.GCE_INSTANCE_NAME }}:${{ secrets.ENV_FILE }} \
            --zone=${{ secrets.GCE_INSTANCE_ZONE }} --quiet
          gcloud compute scp script.sh ${{ secrets.GCE_USERNAME }}@${{ secrets.GCE_INSTANCE_NAME }}:${{ secrets.DEPLOY_FILE }} \
            --zone=${{ secrets.GCE_INSTANCE_ZONE }} --quiet

      - name: Deploy to GCE VM Instance
        run: |
          gcloud compute ssh ${{ secrets.GCE_USERNAME }}@${{ secrets.GCE_INSTANCE_NAME }} \
            --zone=${{ secrets.GCE_INSTANCE_ZONE }} \
            --command="chmod +x ${{ secrets.DEPLOY_FILE }} && \
              bash ${{ secrets.DEPLOY_FILE }} \
              ${{ secrets.APP_NAME }} \
              ${{ secrets.DOCKER_REPO }} \
              ${{ github.event.workflow_run.head_sha }} \
              ${{ secrets.ENV_FILE }} ; \
              rm -f ${{ secrets.DEPLOY_FILE }} ${{ secrets.ENV_FILE }}"
